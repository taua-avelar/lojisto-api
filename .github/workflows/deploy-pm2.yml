name: Deploy Backend to EC2 with PM2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Create deployment package
      run: |
        # Criar lista de arquivos para incluir no pacote
        cat > .deployignore << EOF
        .git
        .gitignore
        .github
        .env.local
        .env.development.local
        .env.test.local
        .env.production.local
        *.log
        .DS_Store
        Thumbs.db
        .idea
        .vscode
        *.swp
        *.swo
        coverage
        .nyc_output
        deploy.sh
        monitor.sh
        .deployignore
        README.md
        docker-compose.yml
        Dockerfile
        .dockerignore
        node_modules/.cache
        node_modules/.bin
        src
        test
        *.spec.ts
        *.test.ts
        tsconfig.json
        tsconfig.build.json
        nest-cli.json
        eslint.config.mjs
        .prettierrc
        dist/**/*.d.ts
        dist/**/*.map
        dist/**/*.tsbuildinfo
        EOF

        # Criar o pacote com os arquivos necessários (sem node_modules)
        echo "📁 Criando pacote de deployment..."
        tar --exclude-from=.deployignore -czf lojisto-api-deployment.tar.gz \
          dist \
          package.json \
          package-lock.json \
          ecosystem.config.js \
          nginx

    - name: Deploy to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: lojisto-api-deployment.tar.gz
        target: /home/ubuntu/
        timeout: 600s
        command_timeout: 600s

    - name: Setup and Start Application on EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        timeout: 600s
        command_timeout: 600s
        script: |
          echo "🛑 Parando e removendo aplicação anterior (se existir)..."
          pm2 stop lojisto-api || true
          pm2 delete lojisto-api || true

          echo "🗂️ Preparando diretório..."
          sudo rm -rf /home/ubuntu/lojisto-api
          mkdir -p /home/ubuntu/lojisto-api
          mkdir -p /home/ubuntu/logs

          echo "📦 Extraindo pacote..."
          cd /home/ubuntu
          tar -xzf lojisto-api-deployment.tar.gz -C lojisto-api

          echo "⚙️ Criando arquivo .env..."
          cd lojisto-api
          cat > .env << 'EOF'
          PORT=8000
          DB_HOST=lojisto-postgres.ce5s2iasahw1.us-east-1.rds.amazonaws.com
          DB_PORT=5432
          DB_USERNAME=postgres
          DB_PASSWORD=postgres123!
          DB_DATABASE=back_gestao_loja
          JWT_SECRET=$2a$12$KJvgTw809rPZ6dJV/DClPenLHI/4rBzmVbdmEATYhSwcIlB.SwNui
          FRONTEND_URL=https://lojisto.site,http://localhost:3000
          EOF

          echo "📦 Instalando dependências no servidor..."
          npm ci --production

          echo "🚀 Iniciando aplicação com PM2..."
          pm2 start ecosystem.config.js
          pm2 save

          echo "⏳ Aguardando inicialização..."
          sleep 3

          echo "📊 Status da aplicação:"
          pm2 list

          echo "🧹 Limpando arquivos temporários..."
          rm -f /home/ubuntu/lojisto-api-deployment.tar.gz

          echo "✅ Deployment concluído com sucesso!"
          echo "🌐 API rodando em: https://api.lojisto.site"

    - name: Final Status Check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        timeout: 15s
        command_timeout: 15s
        script: |
          echo "🏥 Status final do deployment:"
          pm2 list
          echo "✅ Deployment process completed!"
          echo "🌐 Check API at: http://54.235.18.125:8000"

    - name: Cleanup
      if: always()
      run: |
        rm -f lojisto-api-deployment.tar.gz
        rm -f .deployignore
